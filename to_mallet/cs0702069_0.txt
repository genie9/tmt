introduct master comput complex program import aspect comput secur applic rang embed system mobil code smartcard one approach problem monitor run time resourc consumpt rise except bound reach variant approach instrument code bound check appropri time altern approach analys static program guarante execut respect certain resourc bound word first approach perform dynam verif second reli static analysi usual main advantag first approach flexibl advantag second approach fact introduc overhead run time perhap import allow earli detect buggi program work focus static analys offer challeng problem keep mind two approach complementari instanc static analys may help reduc frequenc dynam verif address issu resourc control varieti properti program one may check termin probabl first one come mind howev context interact program properti refin reactiv general set reactiv program defin co induct largest set program termin interact environ lead program set program manipul data valu variabl size list tree graph analysi go beyond reactiv instanc establish program react use feasibl amount resourc feasibl understood instanc comput polynomi time case analysi produc function bound time space need reaction depend size certain paramet larg collect static analysi techniqu see e g allow establish feasibl reactiv function program common featur method combin tradit termin method could call data size flow analysi mean method describ size valu comput program depend size valu taken input start research programm aim extend approach synchron concurr program languag present work focus particular calculus synchron version calculus base sl synchron languag model latter regard relax esterel model reaction absenc signal within instant happen next instant various full fledg concurr synchron program languag develop top sl model see e g calculus regard refin model captur essenti aspect languag contribut includ methodolog annot program ii relat static analysi method guarante feasibl reactiv finit control program express calculus program come two kind annot concern thread identifi signal characterist synchron program thread perform set action cyclic way cycl differ instant span sever instant possibl unbound number requir subset thread identifi mark end cycl begin new one annot effect oper semant use produc certain static condit first condit call read condit inform condit requir thread within cycl read finit number signal technic consequ restrict behaviour thread within instant describ function paramet finit mani valu read within cycl thread identifi carri two addit annot basic goal show instant termin natur lead compar thread identifi paramet accord suitabl well found order reason assum thread identifi annot status describ paramet compar typic accord lexicograph multi set order anoth import goal toward feasibl reactiv show paramet thread sens non size increas turn alway appropri consid paramet therefor requir explicit associ thread identifi possibl proper subset paramet consid analysi size summaris thread identifi three kind annot one say whether mark end cycl anoth call status describ paramet compar termin analysi final one specifi subset paramet relev comput size one hand program allow emit valu signal depend valu read signal hand want avoid situat exampl program repeat read valu signal emit larger valu signal address issu assum signal name partit finit number region order precis refin type system signal type come region type term type signal name explicit carri inform region signal name belong annot affect oper semant use generat static condit guarante feasibl reactiv inform condit state size valu emit signal region bound function size valu read signal smaller region next move inform descript static condit first find abstract way describ data size flow program end import adapt concept quasi interpret propos context analysi comput complex first order function program second step describ method associ program finit set inequ first order term prove whenev inequ satisfi polynomi bound quasi interpret program feasibl reactiv inequ classifi three categori accord purpos ensur termin instant size paramet thread begin cycl non size increas size valu comput thread within cycl bound polynomi size paramet thread size valu read signal within cycl obvious inequ depend signal thread annot describ rest paper organis follow section introduc syntax calculus along program exampl inform comparison calculus section provid formal reduct semant calculus introduc notion feasibl reactiv section defin differ kind thread signal annot mention show associ set inequ annot program introduc notion assign provid interpret inequ term numer function quasi interpret polynomi bound assign satisfi inequ main result state program admit quasi interpret feasibl reactiv devot section outlin proof techniqu leav detail appendix
