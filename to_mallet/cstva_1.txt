formal background context free grammar random generat paper cardin finit set denot context free grammar context free grammar tupl disjoint finit alphabet initi symbol finit subset element call termin symbol element call non termin symbol element call rule grammar frequent denot word successor grammar exist complet derivationa deriv obvious left deriv grammar finit sequenc word everi successor deriv tree finit tree whose intern node label letter whose leav label element whose root label satisfi node label children label order either size deriv tree given number tree node exampl context free grammar let us consid grammar sequenc complet deriv grammar associ deriv tree tikzpictur node node node b node b node node e node edg node edgeabov node edgeabov node b edgeabov node b edgeabov node edgeabov node e r note biject set complet deriv grammar set deriv tree grammar context free grammar denot number deriv tree node deriv tree cover element least one node label instanc tree exampl element cover sinc appear deriv tree uniform random generat present issu given posit integ context free grammar comput random uniform distribut deriv tree size grammar briefli explain tackl problem use well known count techniqu notic advanc techniqu allow faster comput like usual non termin symbol denot capit letter given context free grammar non termin symbol posit integ number deriv tree size generat denot e use correspond lowercas letter given posit integ symbol sequenc posit integ introduc recurs comput follow strict posit integ rule let us set known theorem sinc hypothesi rule form involv definit strict less way recurs comput consid instanc grammar one therefor otherwis follow etc two deriv tree size four deriv tree size tree form deriv tree size order generat deriv tree size comput method perform polynomi time afterward random generat done recurs use given algorithm fig random generationinput context free grammar strict posit integ output deriv tree size algorithm let set element whose first element return “exception” pick probabl let root symbol children order let pick probabl th sub tree obtain run random generat algorithm return random generat algorithm known algorithm provid uniform generat deriv tree size e deriv tree occur probabl note except rais step element given size exampl present element size imposs generat deriv tree size run algorithm exampl one consid step set sinc rule left element sinc step probabl probabl probabl pick generat tree root symbol uniqu child run algorithm exampl stop step sinc tree size run algorithm exampl set consid step sinc pick probabl therefor tree root symbol two children label therefor step consid set step one probabl sinc similar probabl probabl afterward algorithm recurs execut child tree chosen probabl
