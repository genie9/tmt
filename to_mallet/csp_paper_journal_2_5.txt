main result section prove theorem start follow definit subsequ theorem definit minuscul longest element heap minuscul heap form compris minuscul heap remark minuscul heap appear wildberg construct differ particular introduc set heap call two neighbour observ precis minuscul heap aris complex simpl lie algebra whose root system simpli lace theorem let minuscul represent complex simpl lie algebra minuscul weight weyl group set coxet generat maxim parabol subgroup stabil follow claim hold label longest element poset lattic ident furthermor minuscul heap minuscul poset isomorph poset isomorph defin definit satisfi follow properti induc action coxet generat toggl group may express form exampl case root system minuscul weight figur show minuscul heap left correspond bruhat poset right order ideal encircl solid line coset repres encircl solid line order ideal encircl dot line furthermor coset repres encircl dot line thus illustr statement ii theorem subfigur subfigur map send indic order ideal indic coset repres proof proposit uniqu maxim element follow see convers also hold let longest element note reduc e product reduc word reduc word necessarili reduc word exist reduc word final segment reduc word sinc reduc exist reduc word reduc word product reduc word follow fact reduc word element length reduc may conclud general howev definit theorem follow isomorph poset desir ii suffic prove claim place follow notat proof theorem let set heap element label let toggl group element defin section know total order definit two element share cover relat follow well defin let order ideal let let denot length longest coset repres consid follow lemma lemma order ideal disagre one vertex proof suffic show exist one vertex two disagre cannot exist vertic exist vertex two disagre must exist vertex label without loss general let assum toggl appli order increas toggl effect order ideal appli ∎ lemma exist element reduc case reduc word reduc word proof let reduc word assum heap built refer particular reduc word recal heap everi reduc word equival sinc order ideal let linear extens e linear extens poset vertic partial order given restrict partial order linear extens let extend linear extens linear extens definit reduc word sinc label follow impli reduc reduc let reduc word note reduc word els absurd let extend word reduc word without loss general may assum heap built refer particular reduc word case vertex correspond maxim vertic order ideal impli exist element label belong ∎ lemma exist element reduc case reduc word reduc word proof result analog lemma ∎ take proof theorem reduc lemma exist element label lemma reduc word follow lemma reduc word desir reduc lemma exist element label lemma reduc word follow lemma reduc word desir reduc follow lemma element label belong lemma howev cover left bruhat order corollari björner brenti follow sinc may conclud desir ∎ remark proof lemma suppress case element given shown belong rather condit symmetr argument ident howev origin wrote proof address case independ may found reu report proceed proof theorem proof theorem let minuscul poset label element label correspond element theorem follow follow diagram commut order theorem follow immedi ∎ proof theorem let minuscul poset label element label correspond element theorem emb weyl group subgroup toggl group light theorem sinc coxet element known pairwis conjug suffic exhibit particular order conjug howev section saw conjug prove exist order toggl group element equal start two lemma lemma minuscul poset rank poset proof discuss introduct minuscul poset gaussian cf proctor theorem fact gaussian poset rank record exercis b stanley ∎ lemma weyl group complex simpl lie algebra dynkin diagram associ root system acycl therefor bipartit proof see chapter exercis björner brenti ∎ let rank function claim rank vertic label pariti proof key observ cover relat heap correspond edg dynkin diagram associ root system recal partial order transit closur relat integ commut cf definit assum sake contradict exist label odd without loss general let sinc total order follow exist set vertic cover cover cover may conclud exist path odd length dynkin diagram vertex correspond simpl root howev lemma graph dynkin diagram bipartit imposs note commut let set simpl reflect rank odd vertic label similar let set simpl reflect rank even vertic label follow complet proof ∎
