comput section context free grammar denot set deriv tree size respect denot set deriv tree size cover cover let probabl random generat deriv tree size cover clear empti resp otherwis resp therefor comput probabl defin section – need solv linear constraint program – reduc comput cardin set comput comput build grammar biject therefor number element everi recurs defin intuit obtain chang letter correspond pair second element instanc grammar exampl one everi defin exact way chang everi defin set word obtain replac occurr letter either restrict least one replac letter remain unchang instanc notic sinc constraint satisfi let intuit ad valu symbol mean rule use exist occurr upper posit deriv tree ad valu symbol mean occurr upper posit exist occurr lower posit deriv tree valu mean occurr appear tree upper lower posit exampl consid grammar grammar set rule follow proposit biject exist biject exampl illustr sever element follow proof proof let function induct defin intuit project delet compon construct rule rule therefor complet deriv complet deriv moreov initi symbol rule left hand side right hand side element occur therefor sinc way destroy compon use rule left hand side follow deriv tree associ cover consequ induc function let complet deriv assum exist minim index sinc therefor exist set one follow case aris exist sinc follow prove contradict proof hold replac proof hold exist sinc one therefor sinc let first letter differ correspond letter construct letter must instanc sinc one therefor without loss general may assum consequ prefix form deriv tree correspond subtre root contain construct convers prefix form deriv tree correspond subtre root contain construct follow two correspond deriv cannot imag contradict follow induc inject function let complet deriv whose correspond tree consid tree label exact structur set posit node label letter correspond node label node label letter node label path root exclud subtre root includ contain one least label least one path root otherwis label one check correspond complet deriv tree whose imag exact complet execut correspond prove surject conclud proof ∎ exampl illustr proof prop consid grammar exampl consid deriv tree depict fig correspond complet deriv associ deriv whose deriv tree depict fig tikzpictur node node node node node node node node node node node node node node node node node node node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node deriv tree exampl tikzpictur node node node node node node node node node node node node node node node node node node node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node edgeabov node deriv tree exampl use proposit result describ section possibl comput denot maxim number element multipl occur right hand side rule whose size bound maxim size rule therefor reason comput tractabl practic even quit larg valu mention comput immedi provid also import point allow uniform random comput execut tree given size cover sinc comput direct applic techniqu comput almost done similar construct differ construct rule grammar grammar must take account appear deriv let proof similar one proposit allow show comput biject note size approxim time greater size
