effici zero decomposit algorithm section give improv algorithm use decompos zero set polynomi system union zero set monic triangular set due special properti algorithm better properti lower complex general zero decomposit algorithm output stronger first note follow zero decomposit theorem still valid proof also quit similar theorem algorithm permit determin given polynomi set finit number step regular proper triangular set satur ideal give follow improv zero decomposit theorem allow us comput number solut finit set polynomi theorem finit polynomi set comput monic proper triangular set consequ top characterist set algorithm section give top characterist set algorithm tdcs allow us comput decomposit properti mention theorem give zero decomposit algorithm first give algorithm comput triangular set algorithm work polynomi largest class henc top zero decomposit algorithm idea top elimin explor key idea algorithm follow let polynomi largest class smallest degre polynomi set reduc degre polynomi take sinc split zero set two part first part sinc replac treat part first case second part simpler treat recurs follow well order procedur base idea algorithm —tdtriset input finit set polynomi output monic triangular set set polynomi system set nonzero element return let polynomi highest class let polynomi lowest degre let set class polynomi lower situat alway happen els goto els set set class polynomi lower els set goto return follow theorem show comput monic triangular set need polynomi number polynomi arithmet oper theorem algorithm tdtriset correct whole algorithm need polynomi multipl particular need polynomi multipl proof let set polynomi highest class polynomi lowest degre let consequ remaind formula therefor split follow two part first part treat similar case second part polynomi set output prove output must correct let us prove termin algorithm iter loop lowest degre polynomi highest class decreas highest class polynomi reduc polynomi ad henc loop end give triangular set polynomi set final analyz complex algorithm let iter lowest degre highest class polynomi reduc least one loop execut time iter new polynomi iter two case except still polynomi class new contain polynomi b highest class elimin new contain polynomi therefor whole algorithm polynomi number iter suppos use elimin polynomi first set monic mean comput need polynomi multipl thus whole algorithm need polynomi multipl order obtain monic polynomi want get sinc monic take one polynomi multipl reduc degre one let sum degre polynomi highest class decreas one one polynomi multipl therefor need multipl reduc time elimin highest class thus whole algorithm need polynomi multipl get pseudo remaind algorithm need polynomi multipl number lemma let input tdtriset assum polynomi let monic triangular set output polynomi proof sinc class need deal class elimin class class lower degre polynomi use tdtriset follow zero decomposit algorithm algorithm — tdcs input finit set polynomi output monic proper triangular set satisfi properti theorem set take polynomi set set let output tdtriset input set suppos set set let set set els set set goto return theorem algorithm tdcs correct proof theorem loop step end obtain step check whether proper triangular set proper save output list proper suppos add obtain new polynomi set thus treat recurs step henc output algorithm prove termin algorithm first prove termin step polynomi set assign index number polynomi class degre contain one polynomi class polynomi monic note tdcs algorithm need elimin polynomi class smaller equal prove termin step show polynomi set smaller index lexicograph order prove need show step algorithm tdtriset updat polynomi set lower index origin one algorithm tdtriset polynomi set updat three way first polynomi replac monic polynomi decreas lead degre henc decreas index polynomi set second step polynomi replac new polynomi ad polynomi index deceas sinc degre certain polynomi class decreas index also deceas polynomi class first compon index deceas least one third step polynomi replac clear index less index easi show strict decreas sequenc index must finit prove termin step suppos obtain step proper algorithm termin proper similar obtain polynomi set exist polynomi reduc wrt prove termin whole algorithm suffici show new monic triangular set obtain step lower order note set polynomi reduc wrt let set polynomi highest class q one lowest degre let tdtriset split two part note polynomi class c thus lemma conclud monic triangular set obtain lower order recurs treat henc prove termin algorithm use follow simpl exampl illustr algorithm work exampl let algorithm tdtriset obvious algorithm return algorithm tdcs check whether proper obtain new execut algorithm tdtriset input choos elimin first part second part execut algorithm tdtriset let thus return algorithm tdcs easi check proper complex analysi tdcs mention section complex analysi zero decomposit algorithm never given although tdcs much simpler zero decomposit algorithm field complex number still difficult give complex analysi howev abl give worst case complex analysi algorithm tdcs import case easi prove monic triangular set alway proper therefor need check whether triangular set proper algorithm tdcs moreov modifi step tdtriset call new algorithm tdtriset modif number polynomi new compon bigger proof theorem know whole algorithm tdtriset input number polynomi also obtain follow algorithm algorithm — tdcs input finit set boolean polynomi output sequenc monic triangular set satisfi theorem set choos polynomi set let input tdtriset let output set return theorem bitsiz complex algorithm tdcs number polynomi remark interest note complex exhaust search algorithm bitsiz polynomi defin section complex exhaust search general better algorithm hand algorithm solv nontrivi problem shown section section clear exhaust search algorithm cannot complex comput gröbner basi defin known polynomi degre polynomi recent bardet fauger salvi gave better complex bound assumpt semi regular interest problem whether exist determinist algorithm find solut boolean polynomi system complex less prove theorem rest section order estim complex algorithm tdcs need consid worst case algorithm call zero decomposit process worst case w decomposit worst case consid set contain boolean polynomi highest class initi polynomi need choos one polynomi add let worst case assum class contain non zero polynomi class moreov second compon new polynomi also class repeat procedur two compon situat alway happen word worst case elimin variabl newli generat non zero polynomi alway class illustr w decomposit follow figur figur rest section repres polynomi set contain polynomi class right arrow point second compon arrow point first compon precis solv polynomi set element obtain lot compon sort compon group variabl involv th group consist compon variabl elimin suppos element th group defin time polynomi quantiti measur complex execut tdtriset whose input polynomi set consist polynomi variabl could bitsiz involv polynomi number arithmet oper need algorithm obvious give correspond worst case complex mean fix two polynomi set let say higher order denot defin highest class polynomi thus complex solv compon origin second compon order also defin therefor use equat recurs formula comput worst case complex algorithm follow result show problem solv w decomposit inde worst case term complex lemma let polynomi set form need solv w decomposit let time polynomi problem proof prove lemma induct compon generat problem lemma hold suppos prove lemma follow figur w decomposit problem get follow recurs formula time polynomi repres w decomposit problem input polynomi variabl polynomi set input polynomi write lemma prove easili equat assum polynomi class polynomi initi generat compon elimin class note element variabl thus hypothesi exist polynomi initi polynomi follow decomposit figur thus note variabl hypothesi sinc conclud consequ lemma hold case proof theorem equat obtain valu write th coordin easi check variabl input polynomi number monomi occur tdtriset therefor bitsiz complex multipl theorem substitut set sinc prove theorem
