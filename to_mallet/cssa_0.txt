introduct problem similar search given two text ask find suffici long substr first text within certain ham distanc substr second text similar search mani applic bioinformat — e g ortholog detect structur predict determin rearrang — extens studi see e g research use first look short substr first text occur unchang second text call seed tri extend short exact match either direct obtain longer approxim match approach call natur enough “seed extend” substr exact match found use either hash tabl substr right length index structur suffix array sa around turn millenium burkhardt kärkkäinen tromp li independ propos look short subsequ first text certain shape occur unchang second text tri extend binari string encod shape subsequ indic posit charact must match indic posit need call space seed total number bit binari string call seed length number call weight subsequ exact match found use either hash tabl subsequ right shape kind modifi sa call space suffix array ssa burkhardt kärkkäinen et al subsequ author shown use space seed signific improv perform seed extend mani paper written design space seed minim number error see e g refer therein specif depend model sequenc similar accept number fals posit charact indic match substr similar fals negat match substr still similar applic question regardless particular applic howev research consist observ best result obtain use one seed time set space seed use combin call multipl seed multipl seed popular power tool similar search linger flaw keep hash tabl ssa seed instanc data structur take linear space exampl shrimp index human genom take gb seed contrast bowti compress sa genom take gb normal sa support substr match compress number bit per charact slight greater empir entropi text unfortun techniqu compress normal sas seem appli direct ssas paper show compress ssas relat normal sas still support fast random access wherea normal sa text list start point suffix text suffix lexicograph order ssa text space seed list start point subsequ right shape subsequ lexicograph order intuit seed start mani ssa similar sa section formal intuit prove theoret upper bound space need store ssa alreadi sa term text length alphabet size seed length weight section present experi show approach work even better practic even implement data structur use simpler theoret sub optim compon achiev better compress upper bound predict fact practic even success appli approach case assumpt under upper bound violat howev still want improv compress random access time seed low weight length ratio recent learn peterlongo et al crochemor tischler independ defin ssas name “bi factor arrays” “gap suffix arrays” special case space seed form russo tischler show repres ssa asymptot succinct space support random access time logarithm length text note howev space seed use applic form also recent learn battaglia et al use idea similar space seed algorithm find motif care symbol seem possibl result could use reduc algorithm memori usag
