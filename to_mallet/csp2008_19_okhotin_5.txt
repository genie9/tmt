construct trelli automaton goal construct trelli automaton accept string thus behaviour automaton string undefin actual languag recogn differ case boolean grammar would difficult check syntax automaton howev disregard string result simpler construct fewer state automaton use state set state defin initi function defin set accept state sketch comput overal structur comput automaton valid encod circuit given figur suffix encod use automaton “work space” diagon spawn left everi th suffix repres comput valu th gate circuit diagon initi hold question mark word everi suffici short suffix circuit descript except valu th gate comput substr start descript th gate end formal comput valu propag left subsequ state diagon valu gate state ongo comput trelli automaton order comput valu th gate automaton read gate descript look valu gate comput shorter substr encod propag diagon precis valu gate brought th diagon form state valu comput place correct diagon singl transit comput valu th gate exact state comput given figur assum encod th gate propag lower left border figur form state state diagon spawn arriv left state gate last th gate figur illustr valu th gate comput alreadi comput valu rest gate preserv furthermor consid full comput automaton string given figur comput contain three instanc comput valu gate case mark dark grey way figur sampl comput state trelli automaton time defin transit use comput vertic line state mark dark grey repres match number descript gate number diagon gate valu allow seek gate vertic line maintain transit form two case line begin bottom state comput previous gate refer gate general form transitionsg howev defin state appear instead explain along construct follow extra transit need handl case state left vertic line belong state comput follow transit besid vertic line transit consid state right dark grey vertic line besid vertic line comput transit right transit actual comput done upper left border area figur assum gate referenc gate figur transit leftmost corner area note place recogn automaton valu border continu right transit eventu upper left border meet dark grey vertic line mark diagon correspond gate transit spot thus valu th gate put memori memori cell propag right direct transit continu question mark th diagon encount valu th gate comput follow transit otherwis th gate refer gate transit left corner figur immedi conclud dark grey vertic line rest comput descript describ content upper left border area easi give transit comput lower right border state comput basi upper left border comput refer neither shown figur second state lower right border comput transit alreadi defin refer state instead refer posit follow transit necessari rest state lower right border either comput earlier defin transit transit complet list transit use comput valu gate start transit requir initi comput set valu symbol gate descript propag right direct transit question mark creat two subsequ transit question mark redupl transit one transit work case begin comput begin comput illustr figur everi valid circuit descript substr transit need everi comput valu set transit process gate requir transit conclud descript transit function make total rest transit defin arbitrarili transit defin actual never occur note sequenti circuit may two consecut gate valu make transit imposs transit defin may safe undefin redefin arbitrarili correct transit tabl automaton given tabl transit tabl state trelli automaton correct given construct state follow lemma specifi state comput almost everi substr valid encod circuit lemma let descript circuit valu gate everi formal proof omit everi transit explain along construct could carri induct length establish main result paper theorem exist state trelli automaton use transit recogn p complet languag letter alphabet automaton convert linear conjunct grammar nontermin repres everi state rule transit corollari exist linear conjunct grammar nontermin rule recogn p complet languag letter alphabet although grammar signific smaller earlier exampl still larg howev conjectur principl oper trelli automaton implement linear conjunct grammar much effici much smaller grammar generat almost languag obtain
